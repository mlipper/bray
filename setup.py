#!/usr/bin/env python
# -*- encoding: utf-8 -*-
#
# This file is modeled after the format suggested by the Python Packaging
# Authority (pypa) in a sample project found here:
#
#   https://github.com/pypa/sampleproject.git
#
# branch master
# commit 52966defd6a61e97295b0bb82cd3474ac3e11c7a
#
"""A setuptools based setup module.

See:
https://packaging.python.org/guides/distributing-packages-using-setuptools/
https://github.com/pypa/sampleproject
"""
from __future__ import absolute_import
from __future__ import print_function

import io
import re
# from glob import glob
# from os.path import basename
from os.path import dirname
from os.path import join
# from os.path import splitext

from setuptools import find_packages
from setuptools import setup


def read(*names, **kwargs):
    with io.open(
        join(dirname(__file__), *names),
        encoding=kwargs.get('encoding', 'utf8')
    ) as fh:
        return fh.read()


setup(
    name='bray',
    version='0.2.0',
    license='Apache-2.0',
    description='Simple batch API for geocoding in Python using Geoclient',
    long_description='%s\n%s' % (
        re.compile('^.. start-badges.*^.. end-badges', re.M | re.S).sub('', read('README.rst')),
        re.sub(':[a-z]+:`~?(.*?)`', r'``\1``', read('CHANGELOG.rst'))
    ),
    long_description_content_type='text/x-rst',
    url='https://github.com/mlipper/bray',
    author='Matthew Lipper',
    author_email='mlipper@gmail.com',
    # For a list of valid classifiers, see https://pypi.org/classifiers/
    classifiers=[
        'Development Status:: 3 - Alpha',
        'Intended Audience :: Developers',
        'Topic :: Utilities',
        'License :: OSI Approved :: Apache Software License',
        'Programming Language :: Python :: 3',
        'Programming Language :: Python :: 3.8',
        'Programming Language :: Python :: 3.9',
        'Programming Language :: Python :: 3 :: Only',
    ],
    keywords=[
        'etl', 'geocoding', 'nyc', 'geoclient',
    ],
    # Required for bray since our source code is in the `src/`
    # subdirectory under the project root.
    #
    # This file was originally generated by a cookie-cutter template with
    # the following uncommented:
    #
    #   py_modules=[splitext(basename(path))[0] for path in glob('src/*.py')],
    #
    # It was commented out and `package_dir` and `packages` were
    # added/adjusted based on PyPA's recommended configuration for using a
    # "source layout". The follow comment snippet from pypa/sampleproject's
    # `setup.py` file indicates `package_dir` and `py_modules` usage is
    # mutually exclusive.
    #
    #   Alternatively, if you just want to distribute a single Python file, use
    #   the `py_modules` argument instead as follows, which will expect a file
    #   called `my_module.py` to exist:
    #
    #     py_modules=["my_module"],
    #
    package_dir={'': 'src'},
    packages=find_packages(where='src'),
    python_requires='>=3.8, <4',
    install_requires=[
        # TODO vendor me!
        # pip requires '--pre' argument for pre-release versions
        'bonobo==0.7.0rc3',
        'dynaconf',
    ],
    extras_require={  # Optional
        # 'dev': ['check-manifest'],
        # 'test': ['coverage'],
    },

    # Originally added to include default `settings.toml`
    # bray configuration file loaded using dynaconf.
    #
    #   include_package_data=True,
    #
    # Replaced by the following:
    package_data={
        'bray': ['settings.toml'],
    },
    entry_points={
        'console_scripts': [
            'bray = bray.cli:main',
        ]
    },
    project_urls={
        'Documentation': 'https://bray.readthedocs.io/',
        'Changelog': 'https://bray.readthedocs.io/en/latest/changelog.html',
        'Issue Tracker': 'https://github.com/mlipper/bray/issues',
    },
    zip_safe=False,
)
